<?xml version="1.0" encoding="UTF-8"?>
<project name="module_sslibrary" default="compile.module.sslibrary">
  <dirname property="module.sslibrary.basedir" file="${ant.file.module_sslibrary}"/>
  
  <property name="module.jdk.home.sslibrary" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.sslibrary" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.sslibrary" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.sslibrary" value="-encoding ISO-8859-1 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="sslibrary.output.dir" value="${module.sslibrary.basedir}/out/production/SSLibrary"/>
  <property name="sslibrary.testoutput.dir" value="${module.sslibrary.basedir}/out/test/SSLibrary"/>
  
  <path id="sslibrary.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="sslibrary.module.production.classpath">
    <path refid="${module.jdk.classpath.sslibrary}"/>
    <path refid="library.commons-lang3-3.4.classpath"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="sslibrary.runtime.production.module.classpath">
    <pathelement location="${sslibrary.output.dir}"/>
    <path refid="library.commons-lang3-3.4.classpath"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="sslibrary.module.classpath">
    <path refid="${module.jdk.classpath.sslibrary}"/>
    <pathelement location="${sslibrary.output.dir}"/>
    <path refid="library.commons-lang3-3.4.classpath"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="sslibrary.runtime.module.classpath">
    <pathelement location="${sslibrary.testoutput.dir}"/>
    <pathelement location="${sslibrary.output.dir}"/>
    <path refid="library.commons-lang3-3.4.classpath"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.sslibrary">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.sslibrary">
    <patternset refid="excluded.from.module.sslibrary"/>
  </patternset>
  
  <path id="sslibrary.module.sourcepath">
    <dirset dir="${module.sslibrary.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.sslibrary" depends="compile.module.sslibrary.production,compile.module.sslibrary.tests" description="Compile module SSLibrary"/>
  
  <target name="compile.module.sslibrary.production" depends="register.custom.compilers" description="Compile module SSLibrary; production classes">
    <mkdir dir="${sslibrary.output.dir}"/>
    <javac2 destdir="${sslibrary.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.sslibrary}/javac">
      <compilerarg line="${compiler.args.sslibrary}"/>
      <bootclasspath refid="sslibrary.module.bootclasspath"/>
      <classpath refid="sslibrary.module.production.classpath"/>
      <src refid="sslibrary.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.sslibrary"/>
    </javac2>
    
    <copy todir="${sslibrary.output.dir}">
      <fileset dir="${module.sslibrary.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.sslibrary.tests" depends="register.custom.compilers,compile.module.sslibrary.production" description="compile module SSLibrary; test classes" unless="skip.tests"/>
  
  <target name="clean.module.sslibrary" description="cleanup module">
    <delete dir="${sslibrary.output.dir}"/>
    <delete dir="${sslibrary.testoutput.dir}"/>
  </target>
</project>